services:
- class: Lipe\Lib\Phpstan\Rules\Expressions\NoCompactRule
  tags:
    - phpstan.rules.rule
- class: Lipe\Lib\Phpstan\Rules\Methods\NoConstructorParameterWithDefaultValueRule
  tags:
    - phpstan.rules.rule
- class: Lipe\Lib\Phpstan\Rules\Methods\FinalInAbstractClassRule
  tags:
    - phpstan.rules.rule
- class: Lipe\Lib\Phpstan\Rules\Methods\PrivateInFinalClassRule
  tags:
    - phpstan.rules.rule
- class: Lipe\Lib\Phpstan\Rules\Statements\NoSwitchRule
  tags:
    - phpstan.rules.rule

# Conditional rules
- class: Lipe\Lib\Phpstan\Rules\Classes\FinalRule
  arguments:
      disallowAbstractClasses: %lipemat.noExtends%
      classesAllowedToBeAbstract: %lipemat.allowedToBeExtended%
- class: Lipe\Lib\Phpstan\Rules\Classes\NoExtendsRule
  arguments:
    classesAllowedToBeExtended: %lipemat.allowedToBeExtended%
- class: Lipe\Lib\Phpstan\Rules\Files\DeclareStrictTypesRule
conditionalTags:
  Lipe\Lib\Phpstan\Rules\Classes\NoExtendsRule:
    phpstan.rules.rule: %lipemat.noExtends%
  Lipe\Lib\Phpstan\Rules\Classes\FinalRule:
    phpstan.rules.rule: %lipemat.nonDistributed%
  Lipe\Lib\Phpstan\Rules\Files\DeclareStrictTypesRule:
    phpstan.rules.rule: %lipemat.nonDistributed%

## Supported custom parameters.
parametersSchema:
  lipemat: structure([
    allowedToBeExtended: listOf(string()),
    noExtends: bool(),
    nonDistributed: bool()
  ])

# Default parameters passed to phpstan by this extension.
parameters:
  lipemat:
    allowedToBeExtended: []
    noExtends: false
    nonDistributed: true
